<?php
/**
 * Add theme custom PHP code in this file.
 */
 /**
 * Implements hook_preprocess_html()
 */
function vermontgold_preprocess_html(&$variables) {
    $path = \Drupal::request()->getPathInfo();
    $path_args = explode('/', $path);
    if (count($path_args) >= 1) {
      $variables['attributes']['class'][] = 'section-' . $path_args[1];
    }
  
    // Add node id to the body class.
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node) {
      if (!is_string($node)) {
        $variables['attributes']['class'][] = 'page-node-' . $node->id();
      }
      else {
        $variables['attributes']['class'][] = 'page-node-' . $node;
      }
    }
  }

  /**
 * Implements hook_preprocess_page_title()
 */
function vermontgold_preprocess_page_title(&$variables, $hook) {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      if (!is_string($node)) {
        $variables['node'] = $node;
      }
    }
  }

// Allow HTML in Menu Link
use Drupal\Core\Render\Markup;

/**
 * Implements hook_preprocess_HOOK()
 */
function vermontgold_preprocess_menu(&$variables){
  foreach($variables['items'] as &$link){
    $link['title'] = Markup::create($link['title']);
  }
}
use Drupal\Component\Render\FormattableMarkup;

function vermontgold_form_search_block_form_alter(&$form, &$form_state) {
  $form['keys']['#attributes']['placeholder'][] = t('Search');
  $form['actions']['submit']['#value'] = html_entity_decode('&#xf002;');
}

/**
 * Implements hook_preprocess_page().
 */
function vermontgold_preprocess_page(&$variables) {
  if(!isset($variables['field_paragraphs'])) {
    $variables['field_paragraphs'] = 'field_paragraphs'; 
  }
}
// Search 

// function vermontgold_form_search_block_form_alter(&$form, &$form_state) {
//     $form['keys']['#attributes']['placeholder'][] = t('Search');
//     $value = new FormattableMarkup('<i class="fab fa-search"></i>@text', ['@text' => '',]);
//     $form['actions']['submit']['#value'] = $value;
// }

/**
 * Implements hook_preprocess_page_title()
 */
use Drupal\taxonomy\Entity\Term;
function vermontgold_base_preprocess_page_title(&$variables, $hook) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if (!is_string($node)) {
      $variables['node'] = $node;
  
      if ($node->getType() == 'page') {
        // $variables['title'] = t('Vermont Gold Blog');
        $variables['field_media_image'] = '/themes/custom/vermontgold/images/Banner2.jpg';
      }
      if ($node->getType() == 'artile') {
        // $variables['title'] = t('Vermont Gold Blog');
        $variables['field_media_image'] = '/themes/custom/vermontgold/images/Banner3.jpg';
      }
      
    }
  }

  if ($term = \Drupal::routeMatch()->getParameter('taxonomy_term')) {
    if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical' && $tid = \Drupal::routeMatch()->getRawParameter('taxonomy_term')) {
      $term = Term::load($tid);
      $vocabulary_id = $term->bundle();
      
      if($vocabulary_id === 'blog_category'){
        $variables['banner_image'] = '/themes/custom/vermontgold/images/Banner2.jpg';
      } else {
        $variables['banner_image'] = '/themes/custom/vermontgold/images/Banner3.jpg';
      }
    }
  }

}
// function vermontgold_base_preprocess_node(&$variables, $hook) {
// $date = $variables['node']->getCreatedTime();
//   // Here you can use drupal's format_date() function, or some custom PHP date formatting.
//   $variables['date'] = \Drupal::service('date.formatter')->format($date, 'F j, Y');// enter date format in $format.

//   $node = $variables['node'];
//   if($node->hasField('field_media_image')){
//     $mid = $node->field_media_image[0]->getValue()['target_id'];
//    $fid = Media::load($mid)->field_media_image[0]->getValue()['target_id'];
//   $file = File::load($fid);
//   $variables['media_image_url'] = $file->url();
//   }
// }